Nakon izvođenja koda
#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <wait.h>
#include <sys/time.h>
#include <sys/resource.h>
int main(int argc, char **argv) {
int pid;
if ((pid=fork()) == -1) {
perror("fork");
return 1;
} else if (pid == 0) {
if ((pid=fork()) == -1) {
perror("fork");
return 1;
} else if (pid == 0) {
sleep(3);
return 0;
} else {
printf("%d\n", getppid());
return 0;
}
}
wait(NULL);
return 0;
}
broj koji se ispiše će biti:
Odaberite jedan odgovor:
a. 1
b. Kod ima grešku i nemože se iskompajlirati ni pokrenuti
c. 0
d. manji od 0
e. veći od 1
Točan odgovor je:
veći od 1

Efekt izvođenja naredbe
make
je:
Odaberite jedan ili više odgovora:
A. Izvršavaju se sva pravila definirana u datoteci Makefile
B. Provjerava se postojanje datoteke Makefile
C. Izvršava se prvo pravilo definirano u datoteci Makefile
Točan odgovor je: Izvršava se prvo pravilo definirano u datoteci Makefile.


Naredba ls -al kol.txt ima za rezultat slijedeći ispis:
-rw-r--r-- 1 dkrst users 359 2005-01-13 06:48 kol.txt
Nakon izvršenja naredbi
chmod a+r *
chmod g-w kol.txt
na datoteci kol.txt će biti postavljena slijedeća prava pristupa:
Odaberite jedan ili više odgovora:
A. vlasnik: čitanje, pisanje, izvršavanje; grupa: pisanje; ostali: čitanje
B. vlasnik: čitanje,pisanje; grupa: čitanje; ostali: čitanje
C. vlasnik: čitanje, pisanje; grupa: čitanje, pisanje; ostali: čitanje
D. vlasnik: čitanje, pisanje: grupa: čitanje; ostali: izvršavanje
Točan odgovor je: vlasnik: čitanje,pisanje; grupa: čitanje; ostali: čitanje.




Proučite kod:
#include <stdio.h>
#include <signal.h>
int flag=1;
void int_handler(int signum) {
printf("Primljen signal\n");
flag = 0;
}
int main() {
signal(SIGTERM, int_handler);
while(flag) {
printf("Novi red...\n");
}
printf("Program gotov\n");
return 0;
}
Ako nakon pokretanja programa korisnik pritisne kombinaciju tipaka CTRL - C, rezultatje:
Odaberite jedan ili više odgovora:
a. Prekid izvršavanja uz ispis pozdravne poruke:
Program gotov
b. Trenutni prekid izvršavanja
c. Prekid izvršavanja uz ispis pozdravne poruke:
Primljen signal
d. Prekid izvršavanja uz ispis pozdravne poruke:
Primljen signal
Program gotov
e. Program ima grešku i nije ga moguće iskompajlirati i pokrenuti
Točan odgovor je:
Trenutni prekid izvršavanja




#define BUFFSIZE 256
char buf[BUFFSIZE];
int main() {
int n, fdin, fdout;
umask(S_IRGRP | S_IROTH);
fdout = open("dat.txt", O_WRONLY | O_CREAT,\
S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | \
S_IROTH);
if (fdout == -1) {
perror("open");
exit(1);
}
fdin = STDIN_FILENO;
while ((n=read(fdin, buf, BUFFSIZE)) > 0) {
write(fdout, buf, n);
}
if (n < 0)
perror("read");
close(fdout);
exit(0);
}
Kao rezultat izvršavanja stvara datoteku dat.txt. Ova datoteka će imati slijedeća prava pristupa:
Odaberite jedan ili više odgovora:
A. Pravo čitanja i pisanja za korisnika, pravo čitanja za grupu, bez prava za ostale
B. Pravo čitanja i pisanja za korisnika, pravo čitanja i pisanja za grupu, pravo čitanja za ostale
C. Pravo čitanja i pisanja za korisnika, pravo pisanja za grupu, bez prava za ostale
Točan odgovor je: Pravo čitanja i pisanja za korisnika, pravo pisanja za grupu, bez prava za ostale.




Poziv funkcije
lseek(fd, 0, SEEK_END);
na datoteci koja je otvorena na file deskriptoru fd kao povratnu vrijednost ima
Odaberite jedan ili više odgovora:
A. -1
B. Novi file offset (poziciju od koje kreće slijedeća ulazno/izlazna operacija) u datoteci
C. Veličinu datoteke
Točan odgovor je: Novi file offset (poziciju od koje kreće slijedeća ulazno/izlazna operacija) u datoteci,




Proučite kod:
#include <stdio.h>
#include <signal.h>
int main() {
sigset_t set;
sigemptyset(&set);
sigaddset(&set, SIGTERM);
sigprocmask(SIG_BLOCK, &set, NULL);
while(1) {
printf("Novi red...\n");
}
printf("Program gotov\n");
return 0;
}
Ako nakon pokretanja programa korisnik pritisne kombinaciju tipaka CTRL - C, rezultatje:
Odaberite jedan ili više odgovora:
a. Trenutni prekid izvršavanja
b. Prekid izvršavanja uz ispis pozdravne poruke:
SIG_BLOCK
c. Program ima grešku i nije ga moguće iskompajlirati i pokrenuti
d. Akcija korisnika nema efekta
e. Prekid izvršavanja uz ispis pozdravne poruke:
Program gotov
Točan odgovor je:
Trenutni prekid izvršavanja




Rezultat izvođenja naredbe
gcc -Wall -O3 fn.c
je
Odaberite jedan ili više odgovora:
A. izvršna datoteka fn.o
B. izvršna datoteka fn
C. objektna datoteka fn.o
D. izvršna datoteka a.out
E. objektna datoteka fn
Točan odgovor je: izvršna datoteka a.out.





Rezultat izvođenja naredbe
gcc -Wall -c -O3 fn.c
je
Odaberite jedan ili više odgovora:
A. objektna datoteka fn
B. objektna datoteka fn.o
C. izvršna datoteka a.out
D. izvršna datoteka fn.o
E. izvršna datoteka fn
Točan odgovor je: objektna datoteka fn.o.



Poziv funkcije
lseek(fd, 0, SEEK_SET);
na datoteci koja je otvorena na file deskriptoru fd kao povratnu vrijednost ima
Odaberite jedan ili više odgovora:
A. Nula
B. Veličinu datoteke
C. Novi file offset (poziciju od koje kreće slijedeća ulazno/izlazna operacija) u datoteci
Točan odgovor je: Nula, Novi file offset (poziciju od koje kreće slijedeća ulazno/izlazna operacija) u
datoteci.




Koliki je broj procesa nakon izvršavanja slijedećeg koda?
int i, pid=0;
for (i=0; i<3; i++) {
if(pid == 0)
pid = fork();
}
Odaberite jedan ili više odgovora:
a. 6
b. Nije definirano
c. 1
d. 2
e. 4
f. 8
Točan odgovor je:
4





U Makefile datoteci:
CC = /usr/bin/gcc
FLAGS = -Wall -O3
TARGETS = hello01 hello02 hello12 hello11 hello13
default: hello13
all: hello01 hello02 hello11 hello12 hello13
hello01: hello.c
$(CC) $(FLAGS) hello.c -o hello01
hello02: hello1.c funkcija.c funkcija2.c
$(CC) $(FLAGS) hello1.c funkcija.c funkcija2.c \
-o hello02
hello11: hello.o
$(CC) $(FLAGS) hello.o -o hello11
hello12: hello1.o funkcija.o funkcija2.o
$(CC) $(FLAGS) hello1.o funkcija.o funkcija2.o \
-o hello12
hello13: hello1.o
$(CC) $(FLAGS) hello1.o libmoj.a -o hello13
clean:
rm -f *.o *~ a.out $(TARGETS)
.c.o:
$(CC) $(FLAGS) -c $<
Odaberite jedan ili više odgovora:
A. Pravila hello01 i hello11 generiraju jednaku izvršnu datoteku
B. Pravila hello11 i hello12 generiraju jednaku izvršnu datoteku
C. Pravila hello01 i hello02 generiraju jednaku izvršnu datoteku
D. ravila hello02 i hello12 generiraju jednaku izvršnu datoteku
Točan odgovor je: Pravila hello01 i hello11 generiraju jednaku izvršnu datoteku, ravila hello02 i hello12 generiraju jednaku izvršnu datoteku.



Naredba
tar -cf arhiva.tar programi/
Odaberite jedan ili više odgovora:
A. Arhivira sadržaj direktorija programi u arhivu arhiva.tar
B. Raspakira sadržaj arhive arhiva.tar u direktorij programi
Točan odgovor je: Arhivira sadržaj direktorija programi u arhivu arhiva.tar.



Koliki je broj procesa nakon izvršavanja slijedećeg koda?
int i, pid=1;
for (i=0; i<3; i++) {
if(pid != 0)
pid = fork();
}
Odaberite jedan ili više odgovora:
a. Nije definirano
b. 1
c. 2
d. 4
e. 6
f. 8
Točan odgovor je:
Nije definirano





U datoteci funkcija.c nalazi se kod:
#include <stdio.h>
void ispis() {
printf("Hello!\n");
}
Naredbom
gcc -Wall funkcija.c
dobiva se
Odaberite jedan ili više odgovora:
A. objektna datoteka ispis.o
B. objektna datoteka funkcija.o
C. greška! Datoteka ne sadrži funkciju main
D. izvršna datoteka a.out
E. objektna datoteka a.out
Točan odgovor je: greška! Datoteka ne sadrži funkciju main.





Naredba
read(fd, buf, 100);
iz datoteke otvorene na file deskriptoru fd čita
Odaberite jedan ili više odgovora:
A. najviše 100 znakova
B. najmanje 100 znakova
C. točno 100 znakova
Točan odgovor je: najviše 100 znakova.





Proučite kod:
#include <stdio.h>
#include <signal.h>
int main() {
sigset_t set;
sigfillset(&set);
sigaddset(&set, SIGTERM);
sigprocmask(SIG_BLOCK, &set, NULL);
while(1) {
printf("Novi red...\n");
}
printf("Program gotov\n");
return 0;
}
Ako nakon pokretanja programa korisnik pritisne kombinaciju tipaka CTRL - C, rezultatje:
Odaberite jedan ili više odgovora:
a. Akcija korisnika nema efekta
b. Prekid izvršavanja uz ispis pozdravne poruke:
Program gotov
c. Trenutni prekid izvršavanja
d. Program ima grešku i nije ga moguće iskompajlirati i pokrenuti
e. Prekid izvršavanja uz ispis pozdravne poruke:
SIG_BLOCK
Točan odgovor je:
Akcija korisnika nema efekta




Proučite kod:
#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <wait.h>
#include <sys/time.h>
#include <sys/resource.h>
int main(int argc, char **argv) {
int status, pid;
struct rlimit rlim;
pid = fork();
if (pid == 0) { // child
rlim.rlim_cur = 5;
rlim.rlim_max = 5;
setrlimit(RLIMIT_CPU, &rlim);
execvp(argv[1], &argv[1]);
} else {
wait(&status);
}
return 0;
}
Koje je funkcionalnost danog programa?
Odaberite jedan ili više odgovora:
a. Pokreće naredbu koju zadaje korisnik, a koja nema argumenata. Izvršavanje naredbe se prekida
točno 5 sekundi nakon pokretanja
b. Pokreće naredbu koju zadaje korisnik, a koja može imati svoje argumente. Izvršavanje naredbe
se prekida najmanje 5 sekundi nakon pokretanja
c. Pokreće naredbu koju zadaje korisnik, a koja nema argumenata. Izvršavanje naredbe se prekida
najmanje 5 sekundi nakon pokretanja
d. Pokreće naredbu koju zadaje korisnik, a koja može imati svoje argumente. Izvršavanje naredbe
se prekida točno 5 sekundi nakon pokretanja
Točan odgovor je:
Pokreće naredbu koju zadaje korisnik, a koja može imati svoje argumente. Izvršavanje naredbe se
prekida najmanje 5 sekundi nakon pokretanja



Koliki je broj procesa nakon izvršavanja slijedećeg koda?
int i, pid=0;
for (i=0; i>3; i++) {
 if(pid == 0)
 pid = fork();
}
Odaberite jedan ili više odgovora:
a. 1
b. 8
c. 4
d. 2
e. Nije definirano
f. 6
Točan odgovor je:
1





Ulazne datoteke za gcc mogu biti:
Odaberite jedan ili više odgovora:
A. arhive objektnog koda (libovi) *.a
B. datoteke izvršnog koda
C. C++ datoteke izvornog koda *.cc
D. C datoteke izvornog koda *.c
E. objektne datoteke *.o
Točan odgovor je: C datoteke izvornog koda *.c, C++ datoteke izvornog koda *.cc , objektne datoteke *.o,
arhive objektnog koda (libovi) *.a.






U pravilu
string1: string2
 string3
string1 predstavlja:
Odaberite jedan ili više odgovora:
A. Datoteke o kojima ovisi prevođenje
B. Naziv pravila koji se koristi kod pozivanja make rutine
C. Naredbe koje se izvršavaju kada se pozove pravilo
D. Naziv izvršne datoteke koja nastaje izvođenjem pravila
Točan odgovor je: Naziv pravila koji se koristi kod pozivanja make rutine.





Nakon izvođenja koda
#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <wait.h>
#include <sys/time.h>
#include <sys/resource.h>
int main(int argc, char **argv) {
 int pid;
 if ((pid=fork()) == -1) {
 perror("fork");
 return 1;
 } else if (pid == 0) {
 if ((pid=fork()) == -1) {
 perror("fork");
 return 1;
 } else if (pid == 0) {
 sleep(3);
 printf("%d\n", getppid());
 return 0;
 } else
 return 0;
 }
 wait(NULL);
 return 0;
}
broj koji se ispiše će biti:
Odaberite jedan odgovor:
a. manji od 0
b. 0
c. veći od 1
d. 1
e. Kod ima grešku i nemože se iskompajlirati ni pokrenuti
Točan odgovor je:
1



Želite obrisati direktorij /home/user1/unix/tmp
Pod pretpostavkom da je vaš radni direktorij (direktorij u kojem se trenutno nalazite) /home/user1,
potrebno je izvršiti slijedeću naredbu:
Odaberite jedan ili više odgovora:
A. rm unix/tmp
B. rmdir unix/tmp
C. rmdir ./unix/tmp
D. rm /home/usrer1/unix/tmp
E. rmdir ../tmp
Točan odgovor je: rmdir unix/tmp, rmdir ./unix/tmp.





Poziv funkcije
creat("dat1.txt", O_RDONLY)
kao rezultat vraća:
Odaberite jedan ili više odgovora:
A. Nenegativni file deskriptor otvorene datoteke
B. Pokazivač tipa FILE *fp koji pokazuje na otvorenu datoteku
C. Poziv funkcije creat sa navedenim argumentima je pogrešan
Točan odgovor je: Poziv funkcije creat sa navedenim argumentima je pogrešan.





Naredbom
cd ./..
Odaberite jedan ili više odgovora:
A. Mijenjamo radni direktorij
B. Ne mijenjamo radni direktorij
Točan odgovor je: Mijenjamo radni direktorij.





Na direktoriju programi koji se nalazi u radnom direktoriju (direktorij u kojem se trenutno nalazimo)
želimo svim korisnicima sustava dati mogućnost pregleda sadržaja direktorija. Ovo ćemo ostvariti
slijedećom naredbom:
Odaberite jedan ili više odgovora:
A. chmod a+r programi
B. chmod guo+r programi
C. chmod ug+r programi
D. chmod 744 programi
Točan odgovor je: chmod a+r programi, chmod guo+r programi, chmod 744 programi.






Naredbom
cd ~
Odaberite jedan ili više odgovora:
A. Pozicionioramo se u direktorij /
B. Pozicioniramo se u direktorij /home
C. Pozicioniramo se u direktorij ~ koji se nalazi u direktoriju u kojem smo se nalazili prije pozivanja
naredbe
D. Pozicioniramo se u vlastiti home direktorij
Točan odgovor je: Pozicioniramo se u vlastiti home direktorij.




Proučite kod:
#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <wait.h>
#include <sys/time.h>
#include <sys/resource.h>
int main(int argc, char **argv) {
 int status, pid;
 struct rlimit rlim;
 pid = fork();
 if (pid == 0) { // child
 execvp(argv[1], &argv[1]);
 } else {
 rlim.rlim_cur = 5;
 rlim.rlim_max = 5;
 setrlimit(RLIMIT_CPU, &rlim);
 wait(&status);
 }
 return 0;
}
Koje je funkcionalnost danog programa?
Odaberite jedan ili više odgovora:
a. Pokreće naredbu koju zadaje korisnik, a koja može imati svoje argumente. Izvršavanje naredbe se
prekida točno 5 sekundi nakon pokretanja
b. Pokreće naredbu koju zadaje korisnik, a koja nema argumenata. Izvršavanje naredbe se prekida
najmanje 5 sekundi nakon pokretanja
c. Pokreće naredbu koju zadaje korisnik, a koja može imati svoje argumente. Vrijeme izvršavanja
naredbe nije ograničeno
d. Pokreće naredbu koju zadaje korisnik, a koja nema argumenata. Vrijeme izvršavanja naredbe nije
ograničeno
Točan odgovor je:
Pokreće naredbu koju zadaje korisnik, a koja može imati svoje argumente. Vrijeme izvršavanja naredbe nije
ograničeno




Izlazne datoteke za gcc mogu biti:
Odaberite jedan ili više odgovora:
A. C datoteke izvornog koda *.c
B. arhive objektnog koda (libovi) *.a
C. C++ datoteke izvornog koda *.cc
D. datoteke izvršnog koda
E. objektne datoteke *.o
Točan odgovor je: objektne datoteke *.o, datoteke izvršnog koda.





Poziv funkcije
lseek(fd, 0, SEEK_CUR);
na datoteci koja je otvorena na file deskriptoru fd nas pozicionira
Odaberite jedan ili više odgovora:
A. Ne mijenja trenutnu poziciju
B. Na kraj datoteke
C. Na početak datoteke
Točan odgovor je: Ne mijenja trenutnu poziciju.




Funkcija close kao rezultat vraća:
Odaberite jedan ili više odgovora:
A. Nula, -1 u slučaju greške
B. File deskriptor zatvorene datoteke, 0 u slučaju greške
C. File deskriptor zatvorene datoteke, -1 u slučaju greške
Točan odgovor je: Nula, -1 u slučaju greške.





Želite obrisati sve datoteke u radnom direktoriju (direktorij u kojem se trenutno nalazite). Datoteke je
potrebno obrisati na način da za svaku pojedinu datoteku sustav zatraži potvrdu brisanja.
Naredba koju će te izvršiti je:
Odaberite jedan ili više odgovora:
A. rm -f *.*
B. rm -i *
C. rm -i *.*
D. rm -f *
Točan odgovor je: rm -i *.








Ukoliko želimo postojeću datoteku dat1.txt otvoriti za čitanje i pisanje, poziv funkcije
open("dat1.txt", O_RDWR | O_CREAT | O_EXCL, 0644);
kao rezultat vraća:
Odaberite jedan ili više odgovora:
A. Poziv funkcije open sa navedenom kombinacijom argumenata rezultira greškom
B. Nenegativni file deskriptor otvorene datoteke
C. Pokazivač tipa FILE *fp koji pokazuje na otvorenu datoteku
Točan odgovor je: Poziv funkcije open sa navedenom kombinacijom argumenata rezultira greškom.



Koliki je broj procesa nakon izvršavanja slijedećeg koda?
int i, pid=1;
for (i=0; i<3; i++) {
 if(pid != 0)
 pid = fork();
}
Odaberite jedan ili više odgovora:
a. 8
b. 4
c. Nije definirano
d. 6
e. 1
f. 2
Točan odgovor je:
Nije definirano





U datoteci funkcija.c nalazi se kod:
#include <stdio.h>
void ispis() {
 printf("Hello!\n");
}
int main() {
 ispis();
 return 0;
}
Naredbama
gcc -c -Wall funkcija.c
gcc -Wall funkcija.o -o fn
dobiva se
Odaberite jedan ili više odgovora:
A. objektna datoteka funkcija.o i izvršna datoteka fn
B. objektna datoteka funkcija.o i izvršna datoteka a.out
C. objektna datoteka ispis.o
D. izvršna datoteka funkcija.o
E. izvršna datoteka fn
Točan odgovor je: objektna datoteka funkcija.o i izvršna datoteka fn.






U Makefile datoteci:
CC = /usr/bin/gcc
FLAGS = -Wall -O3
TARGETS = hello01 hello02 hello12 hello11 hello13
default: hello13
all: hello01 hello02 hello11 hello12 hello13
hello01: hello.c
 $(CC) $(FLAGS) hello.c -o hello01
hello02: hello.o
 $(CC) $(FLAGS) hello.o -o hello02
hello11: hello1.c funkcija.c funkcija2.c
 $(CC) $(FLAGS) hello1.c funkcija.c funkcija2.c \
 -o hello11
hello12: hello1.o funkcija.o funkcija2.o
 $(CC) $(FLAGS) hello1.o funkcija.o funkcija2.o \
 -o hello12
hello13: hello1.o
 $(CC) $(FLAGS) hello1.o libmoj.a -o hello13
clean:
 rm -f *.o *~ a.out $(TARGETS)
.c.o:
 $(CC) $(FLAGS) -c $<
Odaberite jedan ili više odgovora:
A. ravila hello02 i hello12 generiraju jednaku izvršnu datoteku
B. Pravila hello11 i hello12 generiraju jednaku izvršnu datoteku
C. Pravila hello01 i hello11 generiraju jednaku izvršnu datoteku
D. Pravila hello01 i hello02 generiraju jednaku izvršnu datoteku
Točan odgovor je: Pravila hello01 i hello02 generiraju jednaku izvršnu datoteku, Pravila hello11 i hello12
generiraju jednaku izvršnu datoteku.




Funkcija creat kao rezultat vraća:
Odaberite jedan ili više odgovora:
A. nenegativni cijeli broj (int), -1 u slučaju greške
B. pokazivač tipa FILE *fp, NULL pokazivač u slučaju greške
C. cijeli broj (int) veći od nula, 0 u slučaju greške
Točan odgovor je: nenegativni cijeli broj (int), -1 u slučaju greške.




U pravilu
string1: string2
 string3
string3 predstavlja:
Odaberite jedan ili više odgovora:
A. Datoteke o kojima ovisi prevođenje
B. Naziv pravila koji se koristi kod pozivanja make rutine
C. Naredbe koje se izvršavaju kada se pozove pravilo
D. Naziv izvršne datoteke koja nastaje izvođenjem pravila
Točan odgovor je: Naredbe koje se izvršavaju kada se pozove pravilo.




Naredbe opisane make pravilom mogu biti:
Odaberite jedan ili više odgovora:
A. Samo naredbe za prevođenje i povezivanje, tj. samo gcc
B. Naredbe za prevođenje i povezivanje (gcc) ili naredba za brisanje suvišnih datoteka (rm)
C. Mogu opisivati bilo koji postupak i uključivati proizvoljan skup naredbi
Točan odgovor je: Mogu opisivati bilo koji postupak i uključivati proizvoljan skup naredbi.





Za simbolička prava pristupa zadana sa
-rwxr-xr-x
oktalni mod glasi:
Odaberite jedan ili više odgovora:
A. 777
B. 755
C. 744
D. 666
E. 644
F. 655
Točan odgovor je: 755.




Postojeća prava pristupa za neku datoteku želite izmjeniti na način da grupi ukinete pravo
čitanja. Ovo mežete izvršiti na slijedeći način:
Odaberite jedan ili više odgovora:
A. chmod 704
B. chmod og‑r
C. chmod 744
D. chmod a‑r
E. chmod g‑r
F. chmod 600
Točan odgovor je: chmod g‑r .






Rezultat izvođenja naredbe
gcc ­Wall ­O3 fn.c ­o fn.o
je
Odaberite jedan ili više odgovora:
A. objektna datoteka fn
B. izvršna datoteka a.out
C. objektna datoteka fn.o
D. izvršna datoteka fn.o
E. izvršna datoteka fn
Točan odgovor je: izvršna datoteka fn.o.




Funkcija creat kao rezultat vraća:
Odaberite jedan ili više odgovora:
A. cijeli broj (int) veći od nula, 0 u slučaju greške
B. nenegativni cijeli broj (int), ‑1 u slučaju greške
C. pokazivač tipa FILE *fp, NULL pokazivač u slučaju greške
Točan odgovor je: nenegativni cijeli broj (int), ‑1 u slučaju greške.




Poziv funkcije
lseek(fd, 0, SEEK_SET);
na datoteci koja je otvorena na file deskriptoru fd nas pozicionira
Odaberite jedan ili više odgovora:
A. Ne mijenja trenutnu poziciju
B. Na kraj datoteke
C. Na početak datoteke
Točan odgovor je: Na početak datoteke.





Postojeća prava pristupa za neku datoteku želite izmjeniti na način da grupi ukinete pravo čitanja. Ovo
mežete izvršiti na slijedeći način:
Odaberite jedan ili više odgovora:
A. chmod g-r
B. chmod a-r
C. chmod 744
D. chmod 600
E. chmod 704
F. chmod og-r
Točan odgovor je: chmod g-r .




Za primjenu naredbe chmod rekurzivno (na direktorij i sve datoteke i direktorije u njemu) koristimo opciju:
Odaberite jedan ili više odgovora:
A. -r
B. -R
Točan odgovor je: -R.



Naredbom
gcc -c -Wall funkcija.c
dobiva se
Odaberite jedan ili više odgovora:
A. izvršna datoteka funkcija.o
B. izvršna datoteka funkcija
C. izvršna datoteka a.out
D. objektna datoteka funkcija.o
E. objektna datoteka ispis.o
Točan odgovor je: objektna datoteka funkcija.o.





Datoteci dat1.txt koja se nalazi u radnom direktoriju (direktorij u kojem se trenutno nalazite) želite
promijeniti ime u dat2.txt
Ovo je moguće napraviti slijedećim naredbama:
Odaberite jedan ili više odgovora:
A. rm dat2.txt dat1.txt
B. mv dat1.txt dat2.txt
C. mv dat2.txt dat1.txt
D. chname dat2.txt dat1.txt
E. rm dat1.txt dat2.txt
Točan odgovor je: mv dat1.txt dat2.txt.





Za simbolička prava pristupa zadana sa
-rwxr--r-x
oktalni mod glasi:
Odaberite jedan ili više odgovora:
A. 644
B. 744
C. 666
D. 645
E. 754
F. 745
Točan odgovor je: 745.




Funkcija open kao rezultat vraća:
Odaberite jedan ili više odgovora:
A. cijeli broj (int) veći od nula, 0 u slučaju greške
B. nenegativni cijeli broj (int), -1 u slučaju greške
C. pokazivač tipa FILE *fp, NULL pokazivač u slučaju greške
Točan odgovor je: nenegativni cijeli broj (int), -1 u slučaju greške.




Ulazne datoteke za gcc mogu biti:
Odaberite jedan ili više odgovora:
A. C datoteke izvornog koda *.c
B. C++ datoteke izvornog koda *.cc
C. arhive objektnog koda (libovi) *.a
D. objektne datoteke *.o
E. datoteke izvršnog koda
Točan odgovor je: C datoteke izvornog koda *.c, C++ datoteke izvornog koda *.cc, objektne datoteke *.o,
arhive objektnog koda (libovi) *.a.





Naredbom
gcc -Wall -c funkcija.c
dobiva se
Odaberite jedan ili više odgovora:
A. objektna datoteka funkcija.o
B. izvršna datoteka a.out
C. greška! Datoteka ne sadrži funkciju main
D. objektna datoteka a.out
E. objektna datoteka ispis.o
Točan odgovor je: objektna datoteka funkcija.o.




Naredba
tar -xf arhiva.tar
Odaberite jedan ili više odgovora:
A. Raspakira sadržaj arhive arhiva.tar
B. Javlja grešku pošto nisu zadane datoteke koje treba pohraniti u arhivu
Točan odgovor je: Raspakira sadržaj arhive arhiva.tar.
Koliki je broj procesa nakon izvršavanja slijedećeg koda?
int i, pid=0;
for (i=0; i>3; i++) {
 if(pid == 0)
 pid = fork();
}
Odaberite jedan ili više odgovora:
a. 2
b. 6
c. 4
d. 8
e. Nije definirano
f. 1
Točan odgovor je:
1






Na direktoriju programi koji se nalazi u radnom direktoriju (direktorij u kojem se trenutno nalazimo)
želimo svim korisnicima sustava dati mogućnost pregleda sadržaja direktorija. Ovo ćemo ostvariti
slijedećom naredbom:
Odaberite jedan ili više odgovora:
A. chmod guo+r programi
B. chmod a+r programi
C. chmod 744 programi
D. chmod ug+r programi
Točan odgovor je: chmod a+r programi, chmod guo+r programi, chmod 744 programi.




U Makefile datoteci:
CC = /usr/bin/gcc
FLAGS = -Wall -O3
TARGETS = prog1 prog2
default: prog2
all: prog1 prog2
prog1: glavni.c funkcija.c funkcija2.c
 $(CC) $(FLAGS) hello1.c funkcija.c funkcija2.c \
 -o glavni1
prog2: glavni.o funkcija.o funkcija2.o
 $(CC) $(FLAGS) hello1.o funkcija.o funkcija2.o \
 -o glavni2
clean:
 rm -f *.o *~ a.out $(TARGETS)
.c.o:
 $(CC) $(FLAGS) -c $<
Pozivanjem pravila prog2 nastaju slijedeće datoteke:
Odaberite jedan ili više odgovora:
A. izvršna datoteka glavni2 i objektne datoteke glavni.o, funkcija.o, funkcija2.o
B. samo izvršna datoteka prog2
C. samo izvršna datoteka glavni2
D. izvršna datoteke prog2 i objektne datoteke glavni.o, funkcija.o, funkcija2.o
Točan odgovor je: izvršna datoteka glavni2 i objektne datoteke glavni.o, funkcija.o, funkcija2.o.



































































































































































